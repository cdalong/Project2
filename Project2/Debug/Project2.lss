
Project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000686  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000612  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008b4  00800200  00800200  00000686  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000686  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000006f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009f8  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000369  00000000  00000000  000011b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000066d  00000000  00000000  00001521  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00001b90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a4  00000000  00000000  00001cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000078b  00000000  00000000  0000219c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00002927  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	89 c2       	rjmp	.+1298   	; 0x594 <__vector_32>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	2a e0       	ldi	r18, 0x0A	; 10
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a4 3b       	cpi	r26, 0xB4	; 180
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	75 d2       	rcall	.+1258   	; 0x5f0 <main>
 106:	83 c2       	rjmp	.+1286   	; 0x60e <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <CSwitch>:
 10a:	0f 92       	push	r0
 10c:	1f 92       	push	r1
 10e:	2f 92       	push	r2
 110:	3f 92       	push	r3
 112:	4f 92       	push	r4
 114:	5f 92       	push	r5
 116:	6f 92       	push	r6
 118:	7f 92       	push	r7
 11a:	8f 92       	push	r8
 11c:	9f 92       	push	r9
 11e:	af 92       	push	r10
 120:	bf 92       	push	r11
 122:	cf 92       	push	r12
 124:	df 92       	push	r13
 126:	ef 92       	push	r14
 128:	ff 92       	push	r15
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	2f 93       	push	r18
 130:	3f 93       	push	r19
 132:	4f 93       	push	r20
 134:	5f 93       	push	r21
 136:	6f 93       	push	r22
 138:	7f 93       	push	r23
 13a:	8f 93       	push	r24
 13c:	9f 93       	push	r25
 13e:	af 93       	push	r26
 140:	bf 93       	push	r27
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	ef 93       	push	r30
 148:	ff 93       	push	r31
 14a:	fc b7       	in	r31, 0x3c	; 60
 14c:	ff 93       	push	r31
 14e:	ff b7       	in	r31, 0x3f	; 63
 150:	ff 93       	push	r31
 152:	ed b7       	in	r30, 0x3d	; 61
 154:	fe b7       	in	r31, 0x3e	; 62
 156:	e0 93 b2 0a 	sts	0x0AB2, r30
 15a:	f0 93 b3 0a 	sts	0x0AB3, r31
 15e:	e0 91 b0 0a 	lds	r30, 0x0AB0
 162:	f0 91 b1 0a 	lds	r31, 0x0AB1
 166:	ed bf       	out	0x3d, r30	; 61
 168:	fe bf       	out	0x3e, r31	; 62
 16a:	ff 91       	pop	r31
 16c:	ff bf       	out	0x3f, r31	; 63
 16e:	ff 91       	pop	r31
 170:	fc bf       	out	0x3c, r31	; 60
 172:	ff 91       	pop	r31
 174:	ef 91       	pop	r30
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	bf 91       	pop	r27
 17c:	af 91       	pop	r26
 17e:	9f 91       	pop	r25
 180:	8f 91       	pop	r24
 182:	7f 91       	pop	r23
 184:	6f 91       	pop	r22
 186:	5f 91       	pop	r21
 188:	4f 91       	pop	r20
 18a:	3f 91       	pop	r19
 18c:	2f 91       	pop	r18
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	ff 90       	pop	r15
 194:	ef 90       	pop	r14
 196:	df 90       	pop	r13
 198:	cf 90       	pop	r12
 19a:	bf 90       	pop	r11
 19c:	af 90       	pop	r10
 19e:	9f 90       	pop	r9
 1a0:	8f 90       	pop	r8
 1a2:	7f 90       	pop	r7
 1a4:	6f 90       	pop	r6
 1a6:	5f 90       	pop	r5
 1a8:	4f 90       	pop	r4
 1aa:	3f 90       	pop	r3
 1ac:	2f 90       	pop	r2
 1ae:	1f 90       	pop	r1
 1b0:	0f 90       	pop	r0
 1b2:	18 95       	reti

000001b4 <Enter_Kernel>:
 1b4:	0f 92       	push	r0
 1b6:	1f 92       	push	r1
 1b8:	2f 92       	push	r2
 1ba:	3f 92       	push	r3
 1bc:	4f 92       	push	r4
 1be:	5f 92       	push	r5
 1c0:	6f 92       	push	r6
 1c2:	7f 92       	push	r7
 1c4:	8f 92       	push	r8
 1c6:	9f 92       	push	r9
 1c8:	af 92       	push	r10
 1ca:	bf 92       	push	r11
 1cc:	cf 92       	push	r12
 1ce:	df 92       	push	r13
 1d0:	ef 92       	push	r14
 1d2:	ff 92       	push	r15
 1d4:	0f 93       	push	r16
 1d6:	1f 93       	push	r17
 1d8:	2f 93       	push	r18
 1da:	3f 93       	push	r19
 1dc:	4f 93       	push	r20
 1de:	5f 93       	push	r21
 1e0:	6f 93       	push	r22
 1e2:	7f 93       	push	r23
 1e4:	8f 93       	push	r24
 1e6:	9f 93       	push	r25
 1e8:	af 93       	push	r26
 1ea:	bf 93       	push	r27
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	ef 93       	push	r30
 1f2:	ff 93       	push	r31
 1f4:	fc b7       	in	r31, 0x3c	; 60
 1f6:	ff 93       	push	r31
 1f8:	ff b7       	in	r31, 0x3f	; 63
 1fa:	ff 93       	push	r31
 1fc:	ed b7       	in	r30, 0x3d	; 61
 1fe:	fe b7       	in	r31, 0x3e	; 62
 200:	e0 93 b0 0a 	sts	0x0AB0, r30
 204:	f0 93 b1 0a 	sts	0x0AB1, r31
 208:	e0 91 b2 0a 	lds	r30, 0x0AB2
 20c:	f0 91 b3 0a 	lds	r31, 0x0AB3
 210:	ed bf       	out	0x3d, r30	; 61
 212:	fe bf       	out	0x3e, r31	; 62
 214:	ff 91       	pop	r31
 216:	ff bf       	out	0x3f, r31	; 63
 218:	ff 91       	pop	r31
 21a:	fc bf       	out	0x3c, r31	; 60
 21c:	ff 91       	pop	r31
 21e:	ef 91       	pop	r30
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	bf 91       	pop	r27
 226:	af 91       	pop	r26
 228:	9f 91       	pop	r25
 22a:	8f 91       	pop	r24
 22c:	7f 91       	pop	r23
 22e:	6f 91       	pop	r22
 230:	5f 91       	pop	r21
 232:	4f 91       	pop	r20
 234:	3f 91       	pop	r19
 236:	2f 91       	pop	r18
 238:	1f 91       	pop	r17
 23a:	0f 91       	pop	r16
 23c:	ff 90       	pop	r15
 23e:	ef 90       	pop	r14
 240:	df 90       	pop	r13
 242:	cf 90       	pop	r12
 244:	bf 90       	pop	r11
 246:	af 90       	pop	r10
 248:	9f 90       	pop	r9
 24a:	8f 90       	pop	r8
 24c:	7f 90       	pop	r7
 24e:	6f 90       	pop	r6
 250:	5f 90       	pop	r5
 252:	4f 90       	pop	r4
 254:	3f 90       	pop	r3
 256:	2f 90       	pop	r2
 258:	1f 90       	pop	r1
 25a:	0f 90       	pop	r0
 25c:	08 95       	ret

0000025e <Dispatch>:

	Cp->ticks += t;
	newnode.task = Cp;
	enqueue_sleep(&sleeping_tasks, &newnode);
	Task_Suspend(Cp->p);
}
 25e:	24 e1       	ldi	r18, 0x14	; 20
 260:	31 e0       	ldi	r19, 0x01	; 1
 262:	0b c0       	rjmp	.+22     	; 0x27a <Dispatch+0x1c>
 264:	80 91 04 02 	lds	r24, 0x0204
 268:	90 91 05 02 	lds	r25, 0x0205
 26c:	01 96       	adiw	r24, 0x01	; 1
 26e:	87 70       	andi	r24, 0x07	; 7
 270:	99 27       	eor	r25, r25
 272:	90 93 05 02 	sts	0x0205, r25
 276:	80 93 04 02 	sts	0x0204, r24
 27a:	80 91 04 02 	lds	r24, 0x0204
 27e:	90 91 05 02 	lds	r25, 0x0205
 282:	82 9f       	mul	r24, r18
 284:	f0 01       	movw	r30, r0
 286:	83 9f       	mul	r24, r19
 288:	f0 0d       	add	r31, r0
 28a:	92 9f       	mul	r25, r18
 28c:	f0 0d       	add	r31, r0
 28e:	11 24       	eor	r1, r1
 290:	e2 5f       	subi	r30, 0xF2	; 242
 292:	fc 4f       	sbci	r31, 0xFC	; 252
 294:	80 81       	ld	r24, Z
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	29 f7       	brne	.-54     	; 0x264 <Dispatch+0x6>
 29a:	20 91 04 02 	lds	r18, 0x0204
 29e:	30 91 05 02 	lds	r19, 0x0205
 2a2:	84 e1       	ldi	r24, 0x14	; 20
 2a4:	91 e0       	ldi	r25, 0x01	; 1
 2a6:	28 9f       	mul	r18, r24
 2a8:	f0 01       	movw	r30, r0
 2aa:	29 9f       	mul	r18, r25
 2ac:	f0 0d       	add	r31, r0
 2ae:	38 9f       	mul	r19, r24
 2b0:	f0 0d       	add	r31, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	e6 5f       	subi	r30, 0xF6	; 246
 2b6:	fd 4f       	sbci	r31, 0xFD	; 253
 2b8:	f0 93 ab 0a 	sts	0x0AAB, r31
 2bc:	e0 93 aa 0a 	sts	0x0AAA, r30
 2c0:	80 81       	ld	r24, Z
 2c2:	91 81       	ldd	r25, Z+1	; 0x01
 2c4:	90 93 b1 0a 	sts	0x0AB1, r25
 2c8:	80 93 b0 0a 	sts	0x0AB0, r24
 2cc:	ec 5f       	subi	r30, 0xFC	; 252
 2ce:	fe 4f       	sbci	r31, 0xFE	; 254
 2d0:	82 e0       	ldi	r24, 0x02	; 2
 2d2:	80 83       	st	Z, r24
 2d4:	80 91 04 02 	lds	r24, 0x0204
 2d8:	90 91 05 02 	lds	r25, 0x0205
 2dc:	01 96       	adiw	r24, 0x01	; 1
 2de:	87 70       	andi	r24, 0x07	; 7
 2e0:	99 27       	eor	r25, r25
 2e2:	90 93 05 02 	sts	0x0205, r25
 2e6:	80 93 04 02 	sts	0x0204, r24
 2ea:	08 95       	ret

000002ec <Task_Terminate>:
 2ec:	80 91 02 02 	lds	r24, 0x0202
 2f0:	90 91 03 02 	lds	r25, 0x0203
 2f4:	89 2b       	or	r24, r25
 2f6:	51 f0       	breq	.+20     	; 0x30c <Task_Terminate+0x20>
 2f8:	f8 94       	cli
 2fa:	e0 91 aa 0a 	lds	r30, 0x0AAA
 2fe:	f0 91 ab 0a 	lds	r31, 0x0AAB
 302:	e7 5f       	subi	r30, 0xF7	; 247
 304:	fe 4f       	sbci	r31, 0xFE	; 254
 306:	88 e0       	ldi	r24, 0x08	; 8
 308:	80 83       	st	Z, r24
 30a:	54 cf       	rjmp	.-344    	; 0x1b4 <Enter_Kernel>
 30c:	08 95       	ret

0000030e <Kernel_Create_Task_At>:
 30e:	fc 01       	movw	r30, r24
 310:	32 96       	adiw	r30, 0x02	; 2
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	31 e0       	ldi	r19, 0x01	; 1
 316:	df 01       	movw	r26, r30
 318:	a9 01       	movw	r20, r18
 31a:	1d 92       	st	X+, r1
 31c:	41 50       	subi	r20, 0x01	; 1
 31e:	50 40       	sbci	r21, 0x00	; 0
 320:	e1 f7       	brne	.-8      	; 0x31a <Kernel_Create_Task_At+0xc>
 322:	e1 50       	subi	r30, 0x01	; 1
 324:	ff 4f       	sbci	r31, 0xFF	; 255
 326:	26 e7       	ldi	r18, 0x76	; 118
 328:	31 e0       	ldi	r19, 0x01	; 1
 32a:	20 83       	st	Z, r18
 32c:	31 97       	sbiw	r30, 0x01	; 1
 32e:	30 83       	st	Z, r19
 330:	31 97       	sbiw	r30, 0x01	; 1
 332:	10 82       	st	Z, r1
 334:	31 97       	sbiw	r30, 0x01	; 1
 336:	60 83       	st	Z, r22
 338:	31 97       	sbiw	r30, 0x01	; 1
 33a:	70 83       	st	Z, r23
 33c:	31 97       	sbiw	r30, 0x01	; 1
 33e:	10 82       	st	Z, r1
 340:	9c 01       	movw	r18, r24
 342:	27 52       	subi	r18, 0x27	; 39
 344:	3f 4f       	sbci	r19, 0xFF	; 255
 346:	dc 01       	movw	r26, r24
 348:	2d 93       	st	X+, r18
 34a:	3c 93       	st	X, r19
 34c:	3b 96       	adiw	r30, 0x0b	; 11
 34e:	60 83       	st	Z, r22
 350:	71 83       	std	Z+1, r23	; 0x01
 352:	32 96       	adiw	r30, 0x02	; 2
 354:	10 82       	st	Z, r1
 356:	35 97       	sbiw	r30, 0x05	; 5
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	80 83       	st	Z, r24
 35c:	08 95       	ret

0000035e <Kernel_Create_Task>:
 35e:	bc 01       	movw	r22, r24
 360:	80 91 00 02 	lds	r24, 0x0200
 364:	90 91 01 02 	lds	r25, 0x0201
 368:	08 97       	sbiw	r24, 0x08	; 8
 36a:	51 f1       	breq	.+84     	; 0x3c0 <Kernel_Create_Task+0x62>
 36c:	80 91 0e 03 	lds	r24, 0x030E
 370:	88 23       	and	r24, r24
 372:	79 f0       	breq	.+30     	; 0x392 <Kernel_Create_Task+0x34>
 374:	e2 e2       	ldi	r30, 0x22	; 34
 376:	f4 e0       	ldi	r31, 0x04	; 4
 378:	21 e0       	ldi	r18, 0x01	; 1
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	90 81       	ld	r25, Z
 37e:	99 23       	and	r25, r25
 380:	51 f0       	breq	.+20     	; 0x396 <Kernel_Create_Task+0x38>
 382:	2f 5f       	subi	r18, 0xFF	; 255
 384:	3f 4f       	sbci	r19, 0xFF	; 255
 386:	ec 5e       	subi	r30, 0xEC	; 236
 388:	fe 4f       	sbci	r31, 0xFE	; 254
 38a:	28 30       	cpi	r18, 0x08	; 8
 38c:	31 05       	cpc	r19, r1
 38e:	b1 f7       	brne	.-20     	; 0x37c <Kernel_Create_Task+0x1e>
 390:	02 c0       	rjmp	.+4      	; 0x396 <Kernel_Create_Task+0x38>
 392:	20 e0       	ldi	r18, 0x00	; 0
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	80 91 00 02 	lds	r24, 0x0200
 39a:	90 91 01 02 	lds	r25, 0x0201
 39e:	01 96       	adiw	r24, 0x01	; 1
 3a0:	90 93 01 02 	sts	0x0201, r25
 3a4:	80 93 00 02 	sts	0x0200, r24
 3a8:	44 e1       	ldi	r20, 0x14	; 20
 3aa:	51 e0       	ldi	r21, 0x01	; 1
 3ac:	24 9f       	mul	r18, r20
 3ae:	c0 01       	movw	r24, r0
 3b0:	25 9f       	mul	r18, r21
 3b2:	90 0d       	add	r25, r0
 3b4:	34 9f       	mul	r19, r20
 3b6:	90 0d       	add	r25, r0
 3b8:	11 24       	eor	r1, r1
 3ba:	86 5f       	subi	r24, 0xF6	; 246
 3bc:	9d 4f       	sbci	r25, 0xFD	; 253
 3be:	a7 cf       	rjmp	.-178    	; 0x30e <Kernel_Create_Task_At>
 3c0:	08 95       	ret

000003c2 <OS_Init>:
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	81 b9       	out	0x01, r24	; 1
 3c6:	80 e8       	ldi	r24, 0x80	; 128
 3c8:	84 b9       	out	0x04, r24	; 4
 3ca:	ea e0       	ldi	r30, 0x0A	; 10
 3cc:	f1 e0       	ldi	r31, 0x01	; 1
 3ce:	80 81       	ld	r24, Z
 3d0:	82 60       	ori	r24, 0x02	; 2
 3d2:	80 83       	st	Z, r24
 3d4:	82 e0       	ldi	r24, 0x02	; 2
 3d6:	81 b9       	out	0x01, r24	; 1
 3d8:	11 98       	cbi	0x02, 1	; 2
 3da:	10 92 01 02 	sts	0x0201, r1
 3de:	10 92 00 02 	sts	0x0200, r1
 3e2:	10 92 03 02 	sts	0x0203, r1
 3e6:	10 92 02 02 	sts	0x0202, r1
 3ea:	10 92 05 02 	sts	0x0205, r1
 3ee:	10 92 04 02 	sts	0x0204, r1
 3f2:	ea e0       	ldi	r30, 0x0A	; 10
 3f4:	f2 e0       	ldi	r31, 0x02	; 2
 3f6:	2a ea       	ldi	r18, 0xAA	; 170
 3f8:	3a e0       	ldi	r19, 0x0A	; 10
 3fa:	84 e1       	ldi	r24, 0x14	; 20
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	df 01       	movw	r26, r30
 400:	ac 01       	movw	r20, r24
 402:	1d 92       	st	X+, r1
 404:	41 50       	subi	r20, 0x01	; 1
 406:	50 40       	sbci	r21, 0x00	; 0
 408:	e1 f7       	brne	.-8      	; 0x402 <OS_Init+0x40>
 40a:	df 01       	movw	r26, r30
 40c:	ac 5f       	subi	r26, 0xFC	; 252
 40e:	be 4f       	sbci	r27, 0xFE	; 254
 410:	1c 92       	st	X, r1
 412:	ec 5e       	subi	r30, 0xEC	; 236
 414:	fe 4f       	sbci	r31, 0xFE	; 254
 416:	e2 17       	cp	r30, r18
 418:	f3 07       	cpc	r31, r19
 41a:	89 f7       	brne	.-30     	; 0x3fe <OS_Init+0x3c>
 41c:	08 95       	ret

0000041e <OS_Start>:
 41e:	1f 93       	push	r17
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
 424:	80 91 02 02 	lds	r24, 0x0202
 428:	90 91 03 02 	lds	r25, 0x0203
 42c:	89 2b       	or	r24, r25
 42e:	09 f0       	breq	.+2      	; 0x432 <OS_Start+0x14>
 430:	61 c0       	rjmp	.+194    	; 0x4f4 <OS_Start+0xd6>
 432:	80 91 00 02 	lds	r24, 0x0200
 436:	90 91 01 02 	lds	r25, 0x0201
 43a:	89 2b       	or	r24, r25
 43c:	09 f4       	brne	.+2      	; 0x440 <OS_Start+0x22>
 43e:	5a c0       	rjmp	.+180    	; 0x4f4 <OS_Start+0xd6>
 440:	f8 94       	cli
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	90 93 03 02 	sts	0x0203, r25
 44a:	80 93 02 02 	sts	0x0202, r24
 44e:	07 df       	rcall	.-498    	; 0x25e <Dispatch>
 450:	c1 e0       	ldi	r28, 0x01	; 1
 452:	d0 e0       	ldi	r29, 0x00	; 0
 454:	11 e0       	ldi	r17, 0x01	; 1
 456:	e0 91 aa 0a 	lds	r30, 0x0AAA
 45a:	f0 91 ab 0a 	lds	r31, 0x0AAB
 45e:	df 01       	movw	r26, r30
 460:	a7 5f       	subi	r26, 0xF7	; 247
 462:	be 4f       	sbci	r27, 0xFE	; 254
 464:	1c 92       	st	X, r1
 466:	80 81       	ld	r24, Z
 468:	91 81       	ldd	r25, Z+1	; 0x01
 46a:	90 93 b1 0a 	sts	0x0AB1, r25
 46e:	80 93 b0 0a 	sts	0x0AB0, r24
 472:	4b de       	rcall	.-874    	; 0x10a <CSwitch>
 474:	e0 91 aa 0a 	lds	r30, 0x0AAA
 478:	f0 91 ab 0a 	lds	r31, 0x0AAB
 47c:	80 91 b0 0a 	lds	r24, 0x0AB0
 480:	90 91 b1 0a 	lds	r25, 0x0AB1
 484:	91 83       	std	Z+1, r25	; 0x01
 486:	80 83       	st	Z, r24
 488:	df 01       	movw	r26, r30
 48a:	a7 5f       	subi	r26, 0xF7	; 247
 48c:	be 4f       	sbci	r27, 0xFE	; 254
 48e:	8c 91       	ld	r24, X
 490:	82 30       	cpi	r24, 0x02	; 2
 492:	99 f0       	breq	.+38     	; 0x4ba <OS_Start+0x9c>
 494:	28 f4       	brcc	.+10     	; 0x4a0 <OS_Start+0x82>
 496:	88 23       	and	r24, r24
 498:	81 f0       	breq	.+32     	; 0x4ba <OS_Start+0x9c>
 49a:	81 30       	cpi	r24, 0x01	; 1
 49c:	41 f0       	breq	.+16     	; 0x4ae <OS_Start+0x90>
 49e:	db cf       	rjmp	.-74     	; 0x456 <OS_Start+0x38>
 4a0:	86 30       	cpi	r24, 0x06	; 6
 4a2:	f1 f0       	breq	.+60     	; 0x4e0 <OS_Start+0xc2>
 4a4:	88 30       	cpi	r24, 0x08	; 8
 4a6:	09 f1       	breq	.+66     	; 0x4ea <OS_Start+0xcc>
 4a8:	84 30       	cpi	r24, 0x04	; 4
 4aa:	a9 f6       	brne	.-86     	; 0x456 <OS_Start+0x38>
 4ac:	0b c0       	rjmp	.+22     	; 0x4c4 <OS_Start+0xa6>
 4ae:	e9 5f       	subi	r30, 0xF9	; 249
 4b0:	fe 4f       	sbci	r31, 0xFE	; 254
 4b2:	80 81       	ld	r24, Z
 4b4:	91 81       	ldd	r25, Z+1	; 0x01
 4b6:	53 df       	rcall	.-346    	; 0x35e <Kernel_Create_Task>
 4b8:	ce cf       	rjmp	.-100    	; 0x456 <OS_Start+0x38>
 4ba:	ec 5f       	subi	r30, 0xFC	; 252
 4bc:	fe 4f       	sbci	r31, 0xFE	; 254
 4be:	10 83       	st	Z, r17
 4c0:	ce de       	rcall	.-612    	; 0x25e <Dispatch>
 4c2:	c9 cf       	rjmp	.-110    	; 0x456 <OS_Start+0x38>
 4c4:	df 01       	movw	r26, r30
 4c6:	a0 5f       	subi	r26, 0xF0	; 240
 4c8:	be 4f       	sbci	r27, 0xFE	; 254
 4ca:	11 96       	adiw	r26, 0x01	; 1
 4cc:	dc 93       	st	X, r29
 4ce:	ce 93       	st	-X, r28
 4d0:	1c 97       	sbiw	r26, 0x0c	; 12
 4d2:	8c 91       	ld	r24, X
 4d4:	82 30       	cpi	r24, 0x02	; 2
 4d6:	09 f0       	breq	.+2      	; 0x4da <OS_Start+0xbc>
 4d8:	be cf       	rjmp	.-132    	; 0x456 <OS_Start+0x38>
 4da:	fd 01       	movw	r30, r26
 4dc:	10 83       	st	Z, r17
 4de:	bb cf       	rjmp	.-138    	; 0x456 <OS_Start+0x38>
 4e0:	e0 5f       	subi	r30, 0xF0	; 240
 4e2:	fe 4f       	sbci	r31, 0xFE	; 254
 4e4:	11 82       	std	Z+1, r1	; 0x01
 4e6:	10 82       	st	Z, r1
 4e8:	b6 cf       	rjmp	.-148    	; 0x456 <OS_Start+0x38>
 4ea:	ec 5f       	subi	r30, 0xFC	; 252
 4ec:	fe 4f       	sbci	r31, 0xFE	; 254
 4ee:	10 82       	st	Z, r1
 4f0:	b6 de       	rcall	.-660    	; 0x25e <Dispatch>
 4f2:	b1 cf       	rjmp	.-158    	; 0x456 <OS_Start+0x38>
 4f4:	df 91       	pop	r29
 4f6:	cf 91       	pop	r28
 4f8:	1f 91       	pop	r17
 4fa:	08 95       	ret

000004fc <Task_Create>:
 4fc:	20 91 02 02 	lds	r18, 0x0202
 500:	30 91 03 02 	lds	r19, 0x0203
 504:	23 2b       	or	r18, r19
 506:	79 f0       	breq	.+30     	; 0x526 <Task_Create+0x2a>
 508:	f8 94       	cli
 50a:	20 91 aa 0a 	lds	r18, 0x0AAA
 50e:	30 91 ab 0a 	lds	r19, 0x0AAB
 512:	f9 01       	movw	r30, r18
 514:	e7 5f       	subi	r30, 0xF7	; 247
 516:	fe 4f       	sbci	r31, 0xFE	; 254
 518:	41 e0       	ldi	r20, 0x01	; 1
 51a:	40 83       	st	Z, r20
 51c:	32 97       	sbiw	r30, 0x02	; 2
 51e:	91 83       	std	Z+1, r25	; 0x01
 520:	80 83       	st	Z, r24
 522:	48 ce       	rjmp	.-880    	; 0x1b4 <Enter_Kernel>
 524:	08 95       	ret
 526:	1b cf       	rjmp	.-458    	; 0x35e <Kernel_Create_Task>
 528:	08 95       	ret

0000052a <Task_Next>:
 52a:	80 91 02 02 	lds	r24, 0x0202
 52e:	90 91 03 02 	lds	r25, 0x0203
 532:	89 2b       	or	r24, r25
 534:	51 f0       	breq	.+20     	; 0x54a <Task_Next+0x20>
 536:	f8 94       	cli
 538:	e0 91 aa 0a 	lds	r30, 0x0AAA
 53c:	f0 91 ab 0a 	lds	r31, 0x0AAB
 540:	e7 5f       	subi	r30, 0xF7	; 247
 542:	fe 4f       	sbci	r31, 0xFE	; 254
 544:	82 e0       	ldi	r24, 0x02	; 2
 546:	80 83       	st	Z, r24
 548:	35 ce       	rjmp	.-918    	; 0x1b4 <Enter_Kernel>
 54a:	08 95       	ret

0000054c <Ping>:
 54c:	d0 e0       	ldi	r29, 0x00	; 0
 54e:	cd e7       	ldi	r28, 0x7D	; 125
 550:	10 98       	cbi	0x02, 0	; 2
 552:	2f 98       	cbi	0x05, 7	; 5
 554:	8d 2f       	mov	r24, r29
 556:	9c 2f       	mov	r25, r28
 558:	01 97       	sbiw	r24, 0x01	; 1
 55a:	f1 f7       	brne	.-4      	; 0x558 <Ping+0xc>
 55c:	8d 2f       	mov	r24, r29
 55e:	9c 2f       	mov	r25, r28
 560:	01 97       	sbiw	r24, 0x01	; 1
 562:	f1 f7       	brne	.-4      	; 0x560 <Ping+0x14>
 564:	8d 2f       	mov	r24, r29
 566:	9c 2f       	mov	r25, r28
 568:	01 97       	sbiw	r24, 0x01	; 1
 56a:	f1 f7       	brne	.-4      	; 0x568 <Ping+0x1c>
 56c:	de df       	rcall	.-68     	; 0x52a <Task_Next>
 56e:	f0 cf       	rjmp	.-32     	; 0x550 <Ping+0x4>

00000570 <Pong>:
 570:	d0 e0       	ldi	r29, 0x00	; 0
 572:	cd e7       	ldi	r28, 0x7D	; 125
 574:	10 9a       	sbi	0x02, 0	; 2
 576:	2f 9a       	sbi	0x05, 7	; 5
 578:	8d 2f       	mov	r24, r29
 57a:	9c 2f       	mov	r25, r28
 57c:	01 97       	sbiw	r24, 0x01	; 1
 57e:	f1 f7       	brne	.-4      	; 0x57c <Pong+0xc>
 580:	8d 2f       	mov	r24, r29
 582:	9c 2f       	mov	r25, r28
 584:	01 97       	sbiw	r24, 0x01	; 1
 586:	f1 f7       	brne	.-4      	; 0x584 <Pong+0x14>
 588:	8d 2f       	mov	r24, r29
 58a:	9c 2f       	mov	r25, r28
 58c:	01 97       	sbiw	r24, 0x01	; 1
 58e:	f1 f7       	brne	.-4      	; 0x58c <Pong+0x1c>
 590:	cc df       	rcall	.-104    	; 0x52a <Task_Next>
 592:	f0 cf       	rjmp	.-32     	; 0x574 <Pong+0x4>

00000594 <__vector_32>:

// System timer that interrupts every 10 ms
void TIMER3_COMPA_vect(void){
  int tasksRemain = 1;										// Condition variable
  sleep_node sleeping_task;
  sleeping_task.task = &sleeping_tasks.head->task;
 594:	80 91 06 02 	lds	r24, 0x0206
 598:	90 91 07 02 	lds	r25, 0x0207
 59c:	9c 01       	movw	r18, r24
  
  if (sleeping_task.task != NULL){
 59e:	00 97       	sbiw	r24, 0x00	; 0
 5a0:	31 f1       	breq	.+76     	; 0x5ee <__vector_32+0x5a>
    while (tasksRemain){						
      sleeping_task.task->ticks -= 1;
 5a2:	dc 01       	movw	r26, r24
 5a4:	ae 5f       	subi	r26, 0xFE	; 254
 5a6:	be 4f       	sbci	r27, 0xFE	; 254
 5a8:	8d 91       	ld	r24, X+
 5aa:	9c 91       	ld	r25, X
 5ac:	11 97       	sbiw	r26, 0x01	; 1
 5ae:	01 97       	sbiw	r24, 0x01	; 1
 5b0:	8d 93       	st	X+, r24
 5b2:	9c 93       	st	X, r25
      
      if (sleeping_task.task->ticks == 0){
 5b4:	89 2b       	or	r24, r25
 5b6:	41 f4       	brne	.+16     	; 0x5c8 <__vector_32+0x34>
        Disable_Interrupt();
 5b8:	f8 94       	cli
        sleeping_task.task->request = RESUME;
 5ba:	f9 01       	movw	r30, r18
 5bc:	e7 5f       	subi	r30, 0xF7	; 247
 5be:	fe 4f       	sbci	r31, 0xFE	; 254
 5c0:	86 e0       	ldi	r24, 0x06	; 6
 5c2:	80 83       	st	Z, r24
        Enter_Kernel();
 5c4:	f7 cd       	rjmp	.-1042   	; 0x1b4 <Enter_Kernel>
        break;
 5c6:	08 95       	ret
      }
	  
  	  if (sleeping_task.next) {
 5c8:	30 97       	sbiw	r30, 0x00	; 0
 5ca:	89 f0       	breq	.+34     	; 0x5ee <__vector_32+0x5a>
  		 sleeping_task = *sleeping_task.next;
 5cc:	20 81       	ld	r18, Z
 5ce:	31 81       	ldd	r19, Z+1	; 0x01
 5d0:	02 80       	ldd	r0, Z+2	; 0x02
 5d2:	f3 81       	ldd	r31, Z+3	; 0x03
 5d4:	e0 2d       	mov	r30, r0
  sleep_node sleeping_task;
  sleeping_task.task = &sleeping_tasks.head->task;
  
  if (sleeping_task.task != NULL){
    while (tasksRemain){						
      sleeping_task.task->ticks -= 1;
 5d6:	d9 01       	movw	r26, r18
 5d8:	ae 5f       	subi	r26, 0xFE	; 254
 5da:	be 4f       	sbci	r27, 0xFE	; 254
 5dc:	8d 91       	ld	r24, X+
 5de:	9c 91       	ld	r25, X
 5e0:	11 97       	sbiw	r26, 0x01	; 1
 5e2:	01 97       	sbiw	r24, 0x01	; 1
 5e4:	8d 93       	st	X+, r24
 5e6:	9c 93       	st	X, r25
      
      if (sleeping_task.task->ticks == 0){
 5e8:	89 2b       	or	r24, r25
 5ea:	71 f7       	brne	.-36     	; 0x5c8 <__vector_32+0x34>
 5ec:	e5 cf       	rjmp	.-54     	; 0x5b8 <__vector_32+0x24>
 5ee:	08 95       	ret

000005f0 <main>:
  * This function creates two cooperative tasks, "Ping" and "Pong". Both
  * will run forever.
  */
void main() 
{
   OS_Init();
 5f0:	e8 de       	rcall	.-560    	; 0x3c2 <OS_Init>
   Task_Create( Ping, 8, 8 );
 5f2:	48 e0       	ldi	r20, 0x08	; 8
 5f4:	50 e0       	ldi	r21, 0x00	; 0
 5f6:	68 e0       	ldi	r22, 0x08	; 8
 5f8:	86 ea       	ldi	r24, 0xA6	; 166
 5fa:	92 e0       	ldi	r25, 0x02	; 2
 5fc:	7f df       	rcall	.-258    	; 0x4fc <Task_Create>
   Task_Create( Pong, 8, 8 );
 5fe:	48 e0       	ldi	r20, 0x08	; 8
 600:	50 e0       	ldi	r21, 0x00	; 0
 602:	68 e0       	ldi	r22, 0x08	; 8
 604:	88 eb       	ldi	r24, 0xB8	; 184
 606:	92 e0       	ldi	r25, 0x02	; 2
 608:	79 df       	rcall	.-270    	; 0x4fc <Task_Create>
   OS_Start();
 60a:	09 cf       	rjmp	.-494    	; 0x41e <OS_Start>
 60c:	08 95       	ret

0000060e <_exit>:
 60e:	f8 94       	cli

00000610 <__stop_program>:
 610:	ff cf       	rjmp	.-2      	; 0x610 <__stop_program>
